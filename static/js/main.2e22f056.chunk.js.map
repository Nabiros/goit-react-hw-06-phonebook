{"version":3,"sources":["components/App/App.styled.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/Buttons/Buttons.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","Form","form","Label","label","Input","input","Button","button","ContactsForm","onSubmit","useState","name","setName","number","setNumber","nameId","uuidv4","numberId","handleChange","e","target","value","action","preventDefault","htmlFor","onChange","type","id","pattern","title","required","List","ul","ListItem","li","ContactsList","contacts","deleteId","map","onClick","Wrapper","div","Filter","onBlur","App","setContacts","filter","setFilter","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","find","contact","toLowerCase","Notify","warning","newContact","prevState","currentTarget","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e22f056.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PrimaryTitle = styled.h1`\r\nmargin-left: 75px;\r\ncolor: gray;\r\n`;\r\n\r\nexport const SecondaryTitle = styled.h2`\r\n  margin-left: 75px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 40px;\r\n  padding: 30px;\r\n  border: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  background-color: #0eebdc;\r\n  border: none;\r\n  border-radius: 10px;\r\n  &:hover,\r\n  &:active {\r\n    cursor: pointer;\r\n    background-color: #15c2b6;\r\n  }\r\n`;","import { useState } from \"react\";\r\nimport { Form, Label, Input} from './ContactsForm.styled';\r\nimport { Button } from '../Buttons/Buttons.styled';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function ContactsForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const nameId = uuidv4();\r\n    const numberId = uuidv4();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value)\r\n                break;\r\n            case 'number':\r\n                setNumber(value)\r\n                break;\r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n   return (\r\n            <Form action=\"\" onSubmit={handleSubmit}>\r\n                <Label htmlFor={nameId}>Name</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id={nameId}\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                \r\n                <Label htmlFor={numberId}>Number</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    id={numberId}\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required/>\r\n                \r\n                <Button type=\"submit\"> Add contact</Button>\r\n            </Form>\r\n        );\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: circle;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 8px;\r\n  font-size: 18px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { List, ListItem } from \"./ContactsList.styled\";\r\nimport { Button } from '../Buttons/Buttons.styled';\r\n\r\n\r\nexport const ContactsList = ({ contacts, deleteId }) => (\r\n    <div>\r\n        <List>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ListItem key={id}>\r\n                    {name} - {number}{\" \"}\r\n                    <Button type=\"button\" onClick={() => deleteId(id)}>\r\n                        Delete\r\n                    </Button>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    </div>\r\n);\r\n    \r\n\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n    deleteId: PropTypes.func,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Wrapper, Label, Input } from \"./Filter.styled\";\r\n\r\n    \r\nexport const Filter = ({ value, onChange, onBlur }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n            />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n}","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled.jsx\";\nimport { ContactsForm } from \"../ContactsForm/ContactsForm.jsx\";\nimport { ContactsList } from \"../ContactsList/ContactsList.jsx\";\nimport { Filter } from \"../Filter/Filter.jsx\";\nimport { Notify } from \"notiflix\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(localStorage.getItem(\"contacts\")) ?? \"\";\n    currentContacts && setContacts(currentContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmit = (name, number) => {\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notify.warning(name + \" is already in contacts.\");\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    setContacts((prevState) => [newContact, ...prevState]);\n  };\n  const removeContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const onChangeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const changeBlur = (e) => {\n    e.currentTarget.value = \"\";\n    setFilter(\"\");\n  };\n\n  const showContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactsForm onSubmit={formSubmit} />\n\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter value={filter} onChange={onChangeFilter} onBlur={changeBlur} />\n      <ContactsList contacts={showContacts()} deleteId={removeContact} />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}